{#
Copyright 2016 Google Inc. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
#}

{% set BACKEND = env["deployment"] + "-backend" %}
{% set FRONTEND = env["deployment"] + "-frontend" %}
{% set FIREWALL = env["deployment"] + "-application-fw" %}
{% set APPLICATION_PORT = 8080 %}
{% set MYSQL_PORT = 8080 %}

resources:
- name: instance-1
  type: compute.v1.instance
  properties:
    zone: us-central1-a
    machineType: zones/us-central1-a/machineTypes/n1-standard-1
    disks:
    - deviceName: boot
      type: PERSISTENT
      boot: true
      autoDelete: true
      initializeParams:
        sourceImage: projects/debian-cloud/global/images/family/debian-9
    networkInterfaces:
    - network: global/networks/default
      accessConfigs:
        - name: external-nat
          type: ONE_TO_ONE_NAT
    metadata:
      items:
      - key: startup-script
        value: |
          #!/bin/sh
          sudo apt-get update
          sudo apt-get -y install apache2-utils         

- name: {{ BACKEND }}
  type: container_vm.jinja
  properties:
    zone: {{ properties["zone"] }}
    dockerImage: gcr.io/deployment-manager-examples/mysql
    containerImage: family/cos-stable
    port: {{ MYSQL_PORT }}

- name: {{ FRONTEND }}
  type: frontend.jinja
  properties:
    zone: {{ properties["zone"] }}
    dockerImage: gcr.io/deployment-manager-examples/nodejsservice
    port: {{ APPLICATION_PORT }}

    # Define the variables that are exposed to container as env variables.
    dockerEnv:
      SEVEN_SERVICE_MYSQL_PORT: {{ MYSQL_PORT }}
      SEVEN_SERVICE_PROXY_HOST: $(ref.{{ BACKEND }}.networkInterfaces[0].networkIP)

    # If left out will default to 1
    size: 2
    # If left out will default to 1
    maxSize: 4

- name: {{ FIREWALL }}
  type: compute.v1.firewall
  properties:
    allowed:
      - IPProtocol: TCP
        ports: [ {{ APPLICATION_PORT }} ]
    sourceRanges: [ 0.0.0.0/0 ]

- name: Check1
  type: gcp-types/monitoring-v3:monitoring.projects.uptimeCheckConfigs.create
  properties:
    parent: projects/{{ env["project"] }}
    displayName: Check1
    period: 60s
    monitoredResource: 
      type: uptime_url
      labels:
        project_id: {{ env["project"] }}
        host: $(ref.advanced-configuration-frontend-lb.IPAddress)
    tcpCheck: 
      port: 8080

  
